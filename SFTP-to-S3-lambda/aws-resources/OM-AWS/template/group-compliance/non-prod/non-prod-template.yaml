AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: "AWS Lambda ETL function, pulls data from SFTP to S3 to RDS."

Globals:
  Function:
    Tags:
      oml-cost-center: 10065369
      oml-application-name: Group Compliance DCC
      oml-application-id: Group Compliance DCC
      oml-department: Group Compliance
      oml-environment: Non Prod
      oml-project-name: Group Compliance DCC
      oml-resource-owner-team: Group Compliance
      oml-resource-owner-team-email: leezaamlatoldmutual.com
      oml-resource-owner-contact: leezaamlatoldmutual.com
      oml-business-owner: Leezaam Leitch

Resources:
  TempRoleforsftptos3lambda:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: SecretManagerwithS3andlogsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetResourcePolicy
                  - secretsmanager:GetSecretValue
                  - secretsmanager:DescribeSecret
                  - secretsmanager:ListSecretVersionIds
                Resource:
                  arn:aws:secretsmanager:eu-west-1:342478014409:secret:oml-group-compliance-secrets-TgsL76
                Sid: SecretsManagerSid
              - Effect: Allow
                Action: 'secretsmanager:ListSecrets'
                Resource: '*'
                Sid: secretsmanagerListSecrets
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                Resource: 'arn:aws:logs:*:332760374405:log-group:*'
                Sid: AllowCreateLogGroupSid
              - Action:
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:332760374405:log-group:*:log-stream:*
                Effect: Allow
                Sid: AllowPutLogsSid
        - PolicyName: S3BucketPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cloudwatch:PutMetricData
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:CreateBucket
                  - s3:PutBucketLogging
                  - s3:PutBucketAcl
                  - s3:PutBucketPolicy
                  - s3:PutBucketVersioning
                  - s3:PutEncryptionConfiguration
                  - s3:ListBucket
                  - s3:GetBucketPolicy
                Resource: arn:aws:s3:::oml-cs-ai-non-prod-compliance/*


        - PolicyName: customer_eventbridge_policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - events:Describe*
                  - events:List*
                  - events:TestEventPattern
                  - schemas:Describe*
                  - schemas:List*
                  - schemas:SearchSchemas
                Resource: "*"
                Effect: Allow
                Sid: EventAndSchemaReadOnlyAccess
              - Action:
                  - batch:List*
                  - ecs:ListClusters
                  - ecs:ListTaskDefinitionFamilies
                  - firehose:ListDeliveryStreams
                  - iam:ListRoles
                  - kinesis:ListStreams
                  - lambda:ListAliases
                  - lambda:ListFunctions
                  - lambda:ListVersionsByFunction
                  - logs:DescribeLogGroups
                  - sns:ListTopics
                  - ssm:ListDocuments
                  - states:ListStateMachines
                Resource: "*"
                Effect: Allow
                Sid: ListPermissionsOnAWSServices
              - Condition:
                  StringEquals:
                    iam:AWSServiceName: schemas.amazonaws.com
                Action: iam:CreateServiceLinkedRole
                Resource: arn:aws:iam::*:role/aws-service-role/schemas.amazonaws.com/AWSServiceRoleForSchemas
                Effect: Allow
                Sid: AWSServiceLinkedRoleForSchemas
              - Condition:
                  StringEquals:
                    iam:PassedToService: events.amazonaws.com
                Action: iam:PassRole
                Resource: arn:aws:iam::*:role/customer_eventbridge_*
                Effect: Allow
                Sid: AWSIAMPassRoleOnlytoCustomerRole
              - Condition:
                  StringEquals:
                    lambda:Principal:
                    - events.amazonaws.com
                Action:
                  - lambda:AddPermission
                Effect: Allow
                Sid: EventBridgeInvokeLambdaFunction
                NotResource:
                  - arn:aws:lambda:*:*:function:AMS*
                  - arn:aws:lambda:*:*:function:ams*
                  - arn:aws:lambda:*:*:function:Sentinel*
                  - arn:aws:lambda:*:*:function:sentinel*
              - Condition:
                  ForAnyValue:StringNotLike:
                    aws:RequestTag/Name:
                      - ams*
                      - AMS*
                      - Ams*
                      - mc*
                      - MC*
                      - sentinel*
                      - Sentinel*
                Action:
                - events:TagResource
                - events:PutEvents
                - schemas:TagResource
                Resource: "*"
                Effect: Allow
                Sid: EventAndSchemaTagPermissions
              - Action:
                  - events:CreateEventBus
                  - events:CreatePartnerEventSource
                  - schemas:CreateDiscoverer
                  - schemas:CreateRegistry
                  - events:ActivateEventSource
                  - events:DeactivateEventSource
                  - events:DeleteEventBus
                  - events:DeleteRule
                  - events:DisableRule
                  - events:EnableRule
                  - events:DeletePartnerEventSource
                  - events:PutRule
                  - events:PutTargets
                  - events:RemoveTargets
                  - schemas:CreateSchema
                  - schemas:DeleteDiscoverer
                  - schemas:DeleteSchema
                  - schemas:DeleteSchemaVersion
                  - schemas:DeleteRegistry
                  - schemas:DeleteResourcePolicy
                  - schemas:PutCodeBinding
                  - schemas:PutResourcePolicy
                Effect: Allow
                Sid: AllowPermissionsToManagedEventBus
                NotResource:
                  - arn:aws:events:*:*:event-bus/AMS*
                  - arn:aws:events:*:*:event-bus/ams*
                  - arn:aws:events:*:*:event-bus/mc*
                  - arn:aws:events:*:*:rule/AMS*
                  - arn:aws:events:*:*:rule/ams*
                  - arn:aws:events:*:*:rule/EC2CWAlarmCleanupEvent
                  - arn:aws:events:*:*:rule/mc*
                  - arn:aws:events:*:*:rule/StackSet-ams*
                  - arn:aws:events:*:*:event-source/AMS*
                  - arn:aws:events:*:*:event-source/ams*
                  - arn:aws:events:*:*:event-source/mc*
                  - arn:aws:schemas:*:*:schema/AMS*
                  - arn:aws:schemas:*:*:schema/ams*
                  - arn:aws:schemas:*:*:schema/mc*
                  - arn:aws:schemas:*:*:registry/AMS*
                  - arn:aws:schemas:*:*:registry/ams*
                  - arn:aws:schemas:*:*:registry/mc*
                  - arn:aws:schemas:*:*:discoverer/AMS*
                  - arn:aws:schemas:*:*:discoverer/mc*
              - Condition:
                  ForAnyValue:StringNotLike:
                    aws:ResourceTag/Name:
                      - ams*
                      - Ams*
                      - mc*
                      - MC*
                      - AMS*
                      - sentinel*
                      - Sentinel*
                Action:
                  - events:UntagResource
                  - schemas:StartDiscoverer
                  - schemas:StopDiscoverer
                  - schemas:UpdateDiscoverer
                  - schemas:UpdateRegistry
                  - schemas:UpdateSchema
                  - schemas:UntagResource
                Resource: "*"
                Effect: Allow
                Sid: AllowDiscoverRegistryPermissions
              - Action:
                  - events:PutPartnerEvents
                  - events:PutPermission
                  - events:RemovePermission
                Resource: "*"
                Effect: Allow
                Sid: NoRLPAllowPermissionsToManageEventBus

        - PolicyName: customer_lambda_admin_policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Resource:
                  - arn:aws:lambda:*:*:function:*
                  - arn:aws:lambda:*:*:layer:*
                Effect: Allow
                NotAction: lambda:AddPermission
                Sid: AllowLambdaActions
              - Action:
                  - lambda:GetAccountSettings
                  - lambda:GetEventSourceMapping
                  - lambda:ListEventSourceMappings
                  - lambda:ListFunctions
                  - iam:ListRoles
                  - lambda:ListTags
                Resource: "*"
                Effect: Allow
                Sid: AllowLambdaReadPermissions
              - Condition:
                  StringEquals:
                    lambda:Principal:
                      - apigateway.amazonaws.com
                      - codecommit.amazonaws.com
                      - events.amazonaws.com
                      - sns.amazonaws.com
                      - s3.amazonaws.com
                      - secretsmanager.amazonaws.com
                Action:
                  - lambda:AddPermission
                  - lambda:RemovePermission
                Resource: arn:aws:lambda:*:*:function:*
                Effect: Allow
                Sid: AllowManageFunctionPolicy
              - Action:
                  - iam:ListRolePolicies
                  - iam:ListAttachedRolePolicies
                  - iam:GetRole
                  - iam:PassRole
                Resource:
                  - arn:aws:iam::*:role/customer_lambda_basic_execution_role
                  - arn:aws:iam::332760374405:role/customer_om_cs-ai-groupcompliance-nonprod-lambda-execution-role
                Effect: Allow
                Sid: AllowPassExecutionRole
              - Action:
                  - logs:Describe*
                  - logs:Get*
                  - logs:FilterLogEvents
                Resource: arn:aws:logs:*:*:log-group:/aws/lambda/*
                Effect: Allow
                Sid: AllowViewFunctionCWLogs
              - Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:log-group:/aws/lambda-insights:*
                Effect: Allow
                Sid: AllowViewFunctionCWLogsInsights
              - Action:
                  - lambda:*
                Resource:
                  - arn:aws:lambda:*:*:function:AMS*
                  - arn:aws:lambda:*:*:layer:AMS*
                Effect: Deny
                Sid: DenyAMSFunctions
              - Action:
                  - lambda:DeleteEventSourceMapping
                  - lambda:UpdateEventSourceMapping
                  - lambda:CreateEventSourceMapping
                Resource: "*"
                Effect: Allow
                Sid: AllowFunctionEventSourceMappings
              - Condition:
                  StringLike:
                    lambda:FunctionArn: arn:aws:lambda:*:*:function:AMS*
                Action:
                  - lambda:DeleteEventSourceMapping
                  - lambda:UpdateEventSourceMapping
                  - lambda:CreateEventSourceMapping
                Resource: "*"
                Effect: Deny
                Sid: DenyAMSFunctionEventSourceMappings
              - Action:
                  - logs:*
                Resource: arn:aws:logs:*:*:log-group:/aws/lambda/AMS*
                Effect: Deny
                Sid: DenyAMSFunctionCWLogs


        - PolicyName: customer_lambda_vpc_policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                Resource: "*"
                Effect: Allow
                Sid: AllowVpcEC2APIs
              - Condition:
                  ForAnyValue:StringNotLike:
                    aws:PrincipalArn:
                      - arn:aws:iam::*:role/customer_lambda_basic_execution_role
                      - arn:aws:iam::*:role/customer-rotate-secrets-lambda-role
                      - arn:aws:iam::*:role/customer_code_pipeline_lambda_execution_role
                      - arn:aws:iam::332760374405:role/customer_om_cs-ai-groupcompliance-nonprod-lambda-execution-role
                Action:
                  - ec2:CreateNetwork*
                  - ec2:DeleteNetworkInterface
                Resource: "*"
                Effect: Deny
                Sid: DenyEC2APIExceptLambdaBasicExecRole

        - PolicyName: customer_om_groupcompliance-nonprod-lambda-execution-role-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - secretsmanager:ListSecrets
                Resource:
                  - "*"
                Effect: Allow
                Sid: SecretsListAllow
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                Resource: arn:aws:logs:*:342478014409:log-group:*
                Effect: Allow
                Sid: AllowCreateLogGroup
              - Action:
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:342478014409:log-group:*:log-stream:*
                Effect: Allow
                Sid: AllowPutLogs
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - arn:aws:logs:*:*:log-group:/AMS/*
                  - arn:aws:logs:*:*:log-group:/Ams/*
                  - arn:aws:logs:*:*:log-group:/ams/*
                  - arn:aws:logs:*:*:log-group:/aws/AMS*
                  - arn:aws:logs:*:*:log-group:/aws/Ams*
                  - arn:aws:logs:*:*:log-group:/aws/ams*
                  - arn:aws:logs:*:*:log-group:/aws/lambda/AMS*
                  - arn:aws:logs:*:*:log-group:/aws/lambda/Ams*
                  - arn:aws:logs:*:*:log-group:/aws/lambda/ams*
                  - arn:aws:logs:*:*:log-group:/mc/*
                  - arn:aws:logs:*:*:log-group:/MC/*
                  - arn:aws:logs:*:*:log-group:/Mc/*
                Effect: Deny
                Sid: DenyAMSLogGroups
              - Action:
                  - s3:GetBucketTagging
                  - s3:GetBucketAcl
                  - s3:GetBucketPolicy
                  - s3:GetBucketLocation
                  - s3:ListBucket
                Resource:
                  - arn:aws:s3:::group-compliance-non-prod
                Effect: Allow
                Sid: S3GDMBucketAccessPolicy
              - Action:
                  - s3:DeleteObject
                  - s3:GetObjectVersionTagging
                  - s3:GetObjectAttributes
                  - s3:GetObjectVersionAttributes
                  - s3:GetObjectAcl
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                  - s3:PutObjectAcl
                Resource:
                  - arn:aws:s3:::group-compliance-non-prod/*
                Effect: Allow
                Sid: S3ObjectAccess
              - Action: s3:ListAllMyBuckets
                Resource: "*"
                Effect: Allow
                Sid: S3ListAllMyBuckets


        - PolicyName: customer_secrets_manager_console_policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - rds:DescribeDBInstances
                  - rds:DescribeDBClusters
                Resource: "*"
                Effect: Allow
                Sid: AllowDescribeRDSPermission
              - Action: redshift:DescribeClusters
                Resource: "*"
                Effect: Allow
                Sid: AllowDescribeRedshiftPermission
              - Action:
                  - kms:ListKeys
                  - kms:ListAliases
                Resource: "*"
                Effect: Allow
                Sid: AllowListKMSKey
              - Action: secretsmanager:*
                Effect: Allow
                NotResource:
                  - arn:aws:secretsmanager:*:*:secret:ams-shared/*
                  - arn:aws:secretsmanager:*:*:secret:customer-shared/*
                  - arn:aws:secretsmanager:*:*:secret:ams/*












  SFTPToS3RDSLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Architectures:
        - x86_64
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - 'lambda.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      CodeUri: /home/pp/git/Group_Compliance/SFTP-to-S3-lambda
      Environment:
        Variables:
          AWS_SM_SECRET_NAME: oml-group-compliance-secrets
          AWS_STS_SERVICE_END_POINT: sts.eu-west-1.amazonaws.com
          ROLE_ARN: arn:aws:iam::342478014409:role/customer_om_groupcompliance-nonprod-lambda-execution-role

          ROLE_SESSION_NAME: GroupComplianceSFTPRDSIngestion
          STAGE: DEV

      FunctionName: SFTPToS3RDSLambdaFunction
      Handler: com.om.gc.S3FilePutTriggerLambda::handleRequest
      MemorySize: 512
      Role: arn:aws:iam::342478014409:role/customer_om_groupcompliance-nonprod-lambda-execution-role
      Runtime: java8
      Timeout: 900

